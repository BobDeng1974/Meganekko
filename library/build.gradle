import org.gradle.internal.os.OperatingSystem

apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'

def ovrSdkMobile = "$rootDir/ovr_sdk_mobile"

dependencies {
    /*
     * Oculus Mobile SDK integration
     */
    compile files("$ovrSdkMobile/VrApi/Libs/Android/VrApi.jar")
    compile files("$ovrSdkMobile/VrAppFramework/Libs/Android/VrAppFramework.jar")
    compile files("$ovrSdkMobile/VrAppSupport/SystemUtils/Libs/Android/SystemUtils.jar")
    compile files("$ovrSdkMobile/VrAppSupport/VrGUI/Libs/Android/VrGUI.jar")
    compile files("$ovrSdkMobile/VrAppSupport/VrLocale/Libs/Android/VrLocale.jar")
    compile files("$ovrSdkMobile/VrAppSupport/VrSound/Libs/Android/VrSound.jar")

    /*
     * Dependencies
     */
    compile 'com.android.support:support-v4:24.2.1'
    compile 'org.joml:joml:1.8.2'
}

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.2'

    buildTypes {
        debug {
            jniDebuggable true
        }
    }

    sourceSets {
        main {
            jniLibs.srcDir 'src/main/libs'
            jni.srcDirs = [] //disable automatic ndk-build call
            res.srcDirs = [
                    'src/main/res',
                    "$ovrSdkMobile/VrAppFramework/res",
                    "$ovrSdkMobile/VrAppSupport/VrGUI/res"
            ]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }
}

/*
 * NDK integration
 */

def GetNDKBuildCmd() {

    def ndkDir = System.getenv('ANDROID_NDK_HOME')
    if (ndkDir == null) {
        ndkDir = System.getenv('ANDROID_NDK')
    }
    if (ndkDir == null) {
        ndkDir = System.getenv('NDKROOT')
    }
    if (ndkDir == null) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        ndkDir = properties.getProperty('ndk.dir')
    }
    if (ndkDir == null) {
        throw new GradleException('NDK not found! Check your environment for ANDROID_NDK or your local.properties contains ndk.dir')
    }
    if (OperatingSystem.current().isWindows()) {
        return ndkDir + '/ndk-build.cmd'
    } else {
        return ndkDir + '/ndk-build'
    }
}

build.dependsOn 'NDKBuild'
clean.dependsOn 'NDKBuildCleanMGN'

task NDKBuild(type: Exec) {
    commandLine GetNDKBuildCmd(), "NDK_PROJECT_PATH=$projectDir/src/main"
}

task NDKBuildCleanMGN(type: Exec) {
    commandLine GetNDKBuildCmd(), 'clean', "NDK_PROJECT_PATH=$projectDir/src/main"
}

/*
 * Upload to bintray
 */

publish {
    userOrg = 'niusounds'
    groupId = 'org.meganekkovr'
    artifactId = 'meganekko'
    publishVersion = "3.0.9"
    desc = 'Gear VR Application Framework.'
    website = 'http://www.meganekkovr.org/'
}
